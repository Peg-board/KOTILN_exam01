fun main(args: Array<String>) {

//    var var1 : Int = 10;
//    var var2 : Float = 10.1f
//    var var3 : Double = 10.2
//    var var4 : Char = '안'
//    var var5 : String = "안드로이드"
//
//    // print: 자동 줄바꿈x, println: 자동 줄바꿈
//    print(var1)
//    println(var2)
//    println(var3)
//    println(var4)
//    println(var5)

    ////////////////////////////////////////////////////////////////////////////////

//     //초기화 할 경우 형식 생략 가능, 초기화 하지 않는 경우 데이터 형식 반드시 필요
//    var var6 = 10

    ////////////////////////////////////////////////////////////////////////////////

//        var myVar : Int = 100
//    myVar = 200 // 작동
//
//    val myVal : Int = 100
//    myVal = 200 // 오류

    ////////////////////////////////////////////////////////////////////////////////

//    // 타입 변경
//    var a : Int = "100".toInt()
//    var b : Double = "100.12".toDouble()

    ////////////////////////////////////////////////////////////////////////////////

//    // 코틀린 문법에서는 기본적으로 변수에 null값을 대입할 수 없다. null값을 대입하려면 변수를 선언할때 데이터 형식 뒤에 '?'를 붙여야 한다.
//    var notNull : Int = null // 오류
//    var okNull : Int? = null // 동작

    ////////////////////////////////////////////////////////////////////////////////
//    // 반대로 변수 객체가 null값이 아니라고 표시해야 하는 경우 "!!"로 나타내며, 이 경우 null 값이 들어오면 오류가 발생
//    var  ary = ArrayList<Int>(1) // 1칸 배열 리스트
//    ary!!.add(100)




}